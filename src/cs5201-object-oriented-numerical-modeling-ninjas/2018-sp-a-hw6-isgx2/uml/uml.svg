<svg version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="3654" height="1714"><defs/><g><g transform="translate(5,-6) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="23" y="41" width="748" height="132" opacity="0.2"/></g><g transform="translate(5,-6) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="763" y="23" width="17" height="22" opacity="0.2"/></g><g transform="translate(5,-6) scale(1,1)"><rect fill="#ffffff" stroke="none" x="16" y="34" width="748" height="132"/></g><g transform="translate(5,-6) scale(1,1)"><path fill="none" stroke="#000000" d="M 16 34 L 764 34 L 764 166 L 16 166 L 16 34 Z Z" stroke-miterlimit="10"/></g><g transform="translate(5,-6) scale(1,1)"><path fill="none" stroke="#000000" d="M 16 74 L 764 74" stroke-miterlimit="10"/></g><g transform="translate(5,-6) scale(1,1)"><path fill="none" stroke="#000000" d="M 16 84 L 764 84" stroke-miterlimit="10"/></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="306" y="53.5">SteepestDescentSolver</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="270" y="68.5">(from Steepest Descent Solver)</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="21" y="101.5">+operator()(A: SquareMatrix&lt;T&gt;&amp;, b: Vector&lt;T&gt;): Vector&lt;T&gt;</text></g></g><g transform="translate(5,-6) scale(1,1)"><rect fill="#ffffff" stroke="none" x="756" y="16" width="17" height="22"/></g><g transform="translate(5,-6) scale(1,1)"><path fill="none" stroke="#000000" d="M 756 16 L 773 16 L 773 38 L 756 38 L 756 16 Z Z" stroke-miterlimit="10" stroke-dasharray="3"/></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="761" y="33.5">T</text></g></g><g transform="translate(5,-6) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="399" y="951" width="505" height="162" opacity="0.2"/></g><g transform="translate(5,-6) scale(1,1)"><rect fill="#ffffff" stroke="none" x="392" y="944" width="505" height="162"/></g><g transform="translate(5,-6) scale(1,1)"><path fill="none" stroke="#000000" d="M 392 944 L 897 944 L 897 1106 L 392 1106 L 392 944 Z Z" stroke-miterlimit="10"/></g><g transform="translate(5,-6) scale(1,1)"><path fill="none" stroke="#000000" d="M 392 984 L 897 984" stroke-miterlimit="10"/></g><g transform="translate(5,-6) scale(1,1)"><path fill="none" stroke="#000000" d="M 392 994 L 897 994" stroke-miterlimit="10"/></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="580.5" y="963.5">OutOfBoundsError</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="576.5" y="978.5">(from Exceptions)</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="397" y="1011.5">«constructor»+OutOfBoundsError(index: const int)</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="397" y="1026.5">«constructor»+OutOfBoundsError()</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="397" y="1041.5">«constructor»+OutOfBoundsError(other: const OutOfBoundsError&amp;)</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="397" y="1056.5">«constructor»+OutOfBoundsError(other: OutOfBoundsError&amp;&amp;)</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="397" y="1071.5">+operator=(other: const OutOfBoundsError&amp;): operator=</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="397" y="1086.5">+operator=(other: OutOfBoundsError&amp;&amp;): operator=</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="397" y="1101.5">+what(): std::string</text></g></g><g transform="translate(5,-6) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="31" y="249" width="928" height="505" opacity="0.2"/></g><g transform="translate(5,-6) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="951" y="231" width="17" height="22" opacity="0.2"/></g><g transform="translate(5,-6) scale(1,1)"><rect fill="#ffffff" stroke="none" x="24" y="242" width="928" height="505"/></g><g transform="translate(5,-6) scale(1,1)"><path fill="none" stroke="#000000" d="M 24 242 L 952 242 L 952 747 L 24 747 L 24 242 Z Z" stroke-miterlimit="10"/></g><g transform="translate(5,-6) scale(1,1)"><path fill="none" stroke="#000000" d="M 24 282 L 952 282" stroke-miterlimit="10"/></g><g transform="translate(5,-6) scale(1,1)"><path fill="none" stroke="#000000" d="M 24 335 L 952 335" stroke-miterlimit="10"/></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="464" y="261.5">Vector</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="404" y="276.5">(from Eigen (Vector))</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="29" y="299.5">-precision: int</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="29" y="314.5">-data: std::unique_ptr&lt;T[]&gt;</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="29" y="329.5">-_size: size_t</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="29" y="352.5">«constructor»+Vector()</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="29" y="367.5">«constructor»+Vector(size: size_t)</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="29" y="382.5">«constructor»+Vector(size: size_t, initialValue: const T&amp;)</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="29" y="397.5">«constructor»+Vector(list: std::initializer_list&lt;T&gt;)</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="29" y="412.5">«constructor»+Vector(other: const Vector&lt;T&gt;&amp;)</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="29" y="427.5">«constructor»+Vector(other: Vector&amp;&amp;)</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="29" y="442.5">+operator=(other: Vector&lt;T&gt;&amp;&amp;): Vector&lt;T&gt;&amp;</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="29" y="457.5">+operator=(other: const Vector&lt;T&gt;&amp;): Vector&lt;T&gt;&amp;</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="29" y="472.5">«friend»+operator==(leftHandSide: const Vector&lt;T&gt;&amp;, rightHandSide: const Vector&lt;T&gt;&amp;): bool</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="29" y="487.5">«friend»+operator!=(leftHandSide: const Vector&lt;T&gt;&amp;, rightHandSide: const Vector&lt;T&gt;&amp;): bool</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="29" y="502.5">«friend»+operator*(leftHandSide: const Vector&lt;T&gt;&amp;, rightHandSide: const Vector&lt;T&gt;&amp;): Vector&lt;T&gt;</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="29" y="517.5">«friend»+operator+(leftHandSide: const Vector&lt;T&gt;&amp;, rightHandSide: const Vector&lt;T&gt;&amp;): Vector&lt;T&gt;</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="29" y="532.5">«friend»+operator-(leftHandSide: const Vector&lt;T&gt;&amp;, rightHandSide: const Vector&lt;T&gt;&amp;): Vector&lt;T&gt;</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="29" y="547.5">+operator*=(rightHandSide: const Vector&lt;T&gt;&amp;): Vector&lt;T&gt;</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="29" y="562.5">+operator+=(rightHandSide: const Vector&lt;T&gt;&amp;): Vector&lt;T&gt;</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="29" y="577.5">+operator-=(rightHandSide: const Vector&lt;T&gt;&amp;): Vector&lt;T&gt;</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="29" y="592.5">«friend»+operator*(scalar: const T&amp;, rightHandSide: const Vector&lt;T&gt;&amp;): Vector&lt;T&gt;</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="29" y="607.5">«friend»+operator*=(rightHandSide: const Vector&lt;T&gt;&amp;, scalar: const T&amp;): Vector&lt;T&gt;</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="29" y="622.5">+operator[](index: int): T&amp;</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="29" y="637.5">+operator[](index: const int): const T&amp;</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="29" y="652.5">+size(): size_t</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="29" y="667.5">+begin(): T*</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="29" y="682.5">+end(): T*</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="29" y="697.5">+T* begin(vector: const Vector&lt;T&gt;&amp;): T*</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="29" y="712.5">+S* end(vector: const Vector&lt;T&gt;&amp;): T*</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="29" y="727.5">«friend»+operator&lt;&lt;(os: std::ostream&amp;, other: const Vector&lt;T&gt;&amp;): std::ostream&amp; </text></g></g><g transform="translate(5,-6) scale(1,1)"><rect fill="#ffffff" stroke="none" x="944" y="224" width="17" height="22"/></g><g transform="translate(5,-6) scale(1,1)"><path fill="none" stroke="#000000" d="M 944 224 L 961 224 L 961 246 L 944 246 L 944 224 Z Z" stroke-miterlimit="10" stroke-dasharray="3"/></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="949" y="241.5">T</text></g></g><g transform="translate(5,-6) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="1503" y="55" width="265" height="72" opacity="0.2"/></g><g transform="translate(5,-6) scale(1,1)"><rect fill="#ffffff" stroke="none" x="1496" y="48" width="265" height="72"/></g><g transform="translate(5,-6) scale(1,1)"><path fill="none" stroke="#000000" d="M 1496 48 L 1761 48 L 1761 120 L 1496 120 L 1496 48 Z Z" stroke-miterlimit="10"/></g><g transform="translate(5,-6) scale(1,1)"><path fill="none" stroke="#000000" d="M 1496 88 L 1761 88" stroke-miterlimit="10"/></g><g transform="translate(5,-6) scale(1,1)"><path fill="none" stroke="#000000" d="M 1496 98 L 1761 98" stroke-miterlimit="10"/></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="1500.5" y="67.5">NonDiagonallyDominantMatrixError</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1560.5" y="82.5">(from Exceptions)</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1501" y="115.5">+what(): const std::string</text></g></g><g transform="translate(5,-6) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="551" y="831" width="217" height="72" opacity="0.2"/></g><g transform="translate(5,-6) scale(1,1)"><rect fill="#ffffff" stroke="none" x="544" y="824" width="217" height="72"/></g><g transform="translate(5,-6) scale(1,1)"><path fill="none" stroke="#000000" d="M 544 824 L 761 824 L 761 896 L 544 896 L 544 824 Z Z" stroke-miterlimit="10"/></g><g transform="translate(5,-6) scale(1,1)"><path fill="none" stroke="#000000" d="M 544 864 L 761 864" stroke-miterlimit="10"/></g><g transform="translate(5,-6) scale(1,1)"><path fill="none" stroke="#000000" d="M 544 874 L 761 874" stroke-miterlimit="10"/></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="552.5" y="843.5">MismatchedDimensionsError</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="584.5" y="858.5">(from Exceptions)</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="549" y="891.5">+what(): const std::string</text></g></g><g transform="translate(5,-6) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="1023" y="257" width="1045" height="505" opacity="0.2"/></g><g transform="translate(5,-6) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="2060" y="239" width="17" height="22" opacity="0.2"/></g><g transform="translate(5,-6) scale(1,1)"><rect fill="#ffffff" stroke="none" x="1016" y="250" width="1045" height="505"/></g><g transform="translate(5,-6) scale(1,1)"><path fill="none" stroke="#000000" d="M 1016 250 L 2061 250 L 2061 755 L 1016 755 L 1016 250 Z Z" stroke-miterlimit="10"/></g><g transform="translate(5,-6) scale(1,1)"><path fill="none" stroke="#000000" d="M 1016 290 L 2061 290" stroke-miterlimit="10"/></g><g transform="translate(5,-6) scale(1,1)"><path fill="none" stroke="#000000" d="M 1016 343 L 2061 343" stroke-miterlimit="10"/></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="1470.5" y="269.5">RectangularMatrix</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1454.5" y="284.5">(from Eigen (Matrix))</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1021" y="307.5">+precision: int</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1021" y="322.5">+data: std::unique_ptr&lt;Vector&lt;T&gt;[]&gt;</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1021" y="337.5">-dimension: size_t</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1021" y="360.5">«constructor»+RectangularMatrix()</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1021" y="375.5">«constructor»+RectangularMatrix(other: const RectangularMatrix&lt;T&gt;&amp;)</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1021" y="390.5">«constructor»+RectangularMatrix(size: const size_t)</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1021" y="405.5">«constructor»+RectangularMatrix(list: const std::initilizer_list&lt;std::initilizer_list&lt;T&gt;&gt;)</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1021" y="420.5">«constructor»+RectangularMatrix(other: const RectangularMatrix&lt;T&gt;&amp;&amp;)</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1021" y="435.5">+resize(rows: size_t, columns: size_t)</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1021" y="450.5">+operator=(other: const RectangularMatrix&lt;T&gt;&amp;): RectangularMatrix&lt;T&gt;&amp;</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1021" y="465.5">+operator=(other: RectangularMatrix&lt;T&gt;&amp;&amp;): RectangularMatrix&lt;T&gt;&amp;</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1021" y="480.5">+operator-(leftHandSide: const RectangularMatrix&lt;T&gt;&amp;): SquareMatrix&lt;T&gt;</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1021" y="495.5">+transpose(leftHandSide: const RectangularMatrix&lt;T&gt;&amp;): RectangularMatrix&lt;T&gt;</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1021" y="510.5">«friend»+operator==(leftHandSide: const RectangularMatrix&lt;T&gt;&amp;, rightHandSide: const RectangularMatrix&lt;T&gt;&amp;): bool</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1021" y="525.5">«friend»+operator!=(leftHandSide: const RectangularMatrix&lt;T&gt;&amp;, rightHandSide: const RectangularMatrix&lt;T&gt;&amp;): bool</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1021" y="540.5">«friend»+operator*(leftHandSide: const RectangularMatrix&lt;T&gt;&amp;, rightHandSide: const RectangularMatrix&lt;T&gt;&amp;): SquareMatrix&lt;T&gt;</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1021" y="555.5">«friend»+operator+(leftHandSide: const RectangularMatrix&lt;T&gt;&amp;, rightHandSide: const RectangularMatrix&lt;T&gt;&amp;): RectangularMatrix&lt;T&gt;</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1021" y="570.5">«friend»+operator-(leftHandSide: const RectangularMatrix&lt;T&gt;&amp;, rightHandSide: const RectangularMatrix&lt;T&gt;&amp;): RectangularMatrix&lt;T&gt;</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1021" y="585.5">+operator*=(rightHandSide: const RectangularMatrix&lt;T&gt;&amp;)</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1021" y="600.5">+operator+=(rightHandSide: const RectangularMatrix&lt;T&gt;&amp;)</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1021" y="615.5">+operator-=(rightHandSide: const RectangularMatrix&lt;T&gt;&amp;)</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1021" y="630.5">«friend»+operator*(leftHandSide: const RectangularMatrix&lt;T&gt;&amp;, rightHandSide: const Vector&lt;T&gt;&amp;): Vector&lt;T&gt;</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1021" y="645.5">«friend»+operator*(leftHandSide: const T&amp;, rightHandSide: const RectangularMatrix&lt;T&gt;&amp;): RectangularMatrix&lt;T&gt;</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1021" y="660.5">+operator()(row: const int, column: const int): T&amp;</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1021" y="675.5">+operator()(row: const int, column: const int): const T&amp;</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1021" y="690.5">+zero(): T</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1021" y="705.5">+rows(): size_t</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1021" y="720.5">+columns(): size_t</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1021" y="735.5">«friend»+operator&lt;&lt;(os: std::ostream&amp;, other: const RectangularMatrix&lt;T&gt;&amp;): std::ostream&amp; </text></g></g><g transform="translate(5,-6) scale(1,1)"><rect fill="#ffffff" stroke="none" x="2053" y="232" width="17" height="22"/></g><g transform="translate(5,-6) scale(1,1)"><path fill="none" stroke="#000000" d="M 2053 232 L 2070 232 L 2070 254 L 2053 254 L 2053 232 Z Z" stroke-miterlimit="10" stroke-dasharray="3"/></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2058" y="249.5">T</text></g></g><g transform="translate(5,-6) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="2175" y="633" width="696" height="457" opacity="0.2"/></g><g transform="translate(5,-6) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="2863" y="615" width="17" height="22" opacity="0.2"/></g><g transform="translate(5,-6) scale(1,1)"><rect fill="#ffffff" stroke="none" x="2168" y="626" width="696" height="457"/></g><g transform="translate(5,-6) scale(1,1)"><path fill="none" stroke="#000000" d="M 2168 626 L 2864 626 L 2864 1083 L 2168 1083 L 2168 626 Z Z" stroke-miterlimit="10"/></g><g transform="translate(5,-6) scale(1,1)"><path fill="none" stroke="#000000" d="M 2168 666 L 2864 666" stroke-miterlimit="10"/></g><g transform="translate(5,-6) scale(1,1)"><path fill="none" stroke="#000000" d="M 2168 676 L 2864 676" stroke-miterlimit="10"/></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="2492" y="645.5">Matrix</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2432" y="660.5">(from Eigen (Matrix))</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2173" y="693.5">+resize(rows: size_t)</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2173" y="708.5">+resize(rows: size_t, columns: size_t)</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2173" y="723.5">+operator()(row: const int, column: const int): T&amp;</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2173" y="738.5">+operator()(row: const int, column: const int): const T&amp;</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2173" y="753.5">+zero(): T</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2173" y="768.5">+rows(): size_t</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2173" y="783.5">+columns(): size_t</text></g></g><g transform="translate(5,-6) scale(1,1)"><rect fill="#ffffff" stroke="none" x="2856" y="608" width="17" height="22"/></g><g transform="translate(5,-6) scale(1,1)"><path fill="none" stroke="#000000" d="M 2856 608 L 2873 608 L 2873 630 L 2856 630 L 2856 608 Z Z" stroke-miterlimit="10" stroke-dasharray="3"/></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2861" y="625.5">T</text></g></g><g transform="translate(5,-6) scale(1,1)"><path fill="none" stroke="#000000" d="M 414 167 L 428 223" stroke-miterlimit="10" stroke-dasharray="3"/></g><g transform="translate(5,-6) scale(1,1)"><path fill="none" stroke="#000000" d="M 421.4513572211376 214.16171522551727 L 428 223 L 429.61902138159263 212.1197991854035" stroke-miterlimit="10"/></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="354.5" y="197.5">+returns solution in</text></g></g><g transform="translate(5,-6) scale(1,1)"><path fill="none" stroke="#000000" d="M 612 167 L 1015 308" stroke-miterlimit="10" stroke-dasharray="3"/></g><g transform="translate(5,-6) scale(1,1)"><path fill="none" stroke="#000000" d="M 1004.0173265838326 308.6171585159502 L 1015 308 L 1006.7976801801753 300.67047412356624" stroke-miterlimit="10"/></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="720.5" y="228.5">+Uses Coefficient Matrix</text></g></g><g transform="translate(5,-6) scale(1,1)"><path fill="none" stroke="#000000" d="M 470 748 L 464 816 L 573 943" stroke-miterlimit="10" stroke-dasharray="3"/></g><g transform="translate(5,-6) scale(1,1)"><path fill="none" stroke="#000000" d="M 563.1868915336278 938.0297985727725 L 573 943 L 569.5755475919647 932.5466213258535" stroke-miterlimit="10"/></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="441.5" y="814.5">+throws</text></g></g><g transform="translate(5,-6) scale(1,1)"><path fill="none" stroke="#000000" d="M 1015 710 L 742 823" stroke-miterlimit="10" stroke-dasharray="3"/></g><g transform="translate(5,-6) scale(1,1)"><path fill="none" stroke="#000000" d="M 749.7801274281607 815.2237787324702 L 742 823 L 752.9999996532252 823.0027620726704" stroke-miterlimit="10"/></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="854.5" y="785.5">+throws</text></g></g><g transform="translate(5,-6) scale(1,1)"><path fill="none" stroke="#000000" d="M 605 748 L 636 823" stroke-miterlimit="10" stroke-dasharray="3"/></g><g transform="translate(5,-6) scale(1,1)"><path fill="none" stroke="#000000" d="M 628.2276733386722 815.2159818686226 L 636 823 L 636.008267117754 812.0000031066021" stroke-miterlimit="10"/></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="604.5" y="785.5">+throws</text></g></g><g transform="translate(5,-6) scale(1,1)"><path fill="none" stroke="#000000" d="M 1099 756 L 783 943" stroke-miterlimit="10" stroke-dasharray="3"/></g><g transform="translate(5,-6) scale(1,1)"><path fill="none" stroke="#000000" d="M 789.6021865118935 934.2016403084341 L 783 943 L 793.8898306544429 941.4470710519935" stroke-miterlimit="10"/></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="919.5" y="867.5">+throws</text></g></g><g transform="translate(5,-6) scale(1,1)"><path fill="none" stroke="#000000" d="M 775 89 L 1495 85" stroke-miterlimit="10" stroke-dasharray="3"/></g><g transform="translate(5,-6) scale(1,1)"><path fill="none" stroke="#000000" d="M 1484.8608678190135 89.2659112293251 L 1495 85 L 1484.814096121282 80.84700563767325" stroke-miterlimit="10"/></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="981.5" y="78.5">+throws if singular coefficient matrix</text></g></g><g transform="translate(5,-6) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="1023" y="840" width="933" height="250" opacity="0.2"/></g><g transform="translate(5,-6) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="1892" y="807" width="73" height="37" opacity="0.2"/></g><g transform="translate(5,-6) scale(1,1)"><rect fill="#ffffff" stroke="none" x="1016" y="833" width="933" height="250"/></g><g transform="translate(5,-6) scale(1,1)"><path fill="none" stroke="#000000" d="M 1016 833 L 1949 833 L 1949 1083 L 1016 1083 L 1016 833 Z Z" stroke-miterlimit="10"/></g><g transform="translate(5,-6) scale(1,1)"><path fill="none" stroke="#000000" d="M 1016 873 L 1949 873" stroke-miterlimit="10"/></g><g transform="translate(5,-6) scale(1,1)"><path fill="none" stroke="#000000" d="M 1016 896 L 1949 896" stroke-miterlimit="10"/></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="1442.5" y="852.5">BaseMatrix</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1398.5" y="867.5">(from Eigen (Matrix))</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1021" y="890.5">«static»+_zero</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1021" y="913.5">«friend»+operator==(leftHandSide: const BaseMatrix&lt;S&gt;&amp;, rightHandSide: const BaseMatrix&lt;S&gt;&amp;): bool</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1021" y="928.5">«friend»+operator!=(leftHandSide: const BaseMatrix&lt;S&gt;&amp;, rightHandSide: const BaseMatrix&lt;S&gt;&amp;): bool</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1021" y="943.5">«friend»+operator*(leftHandSide: const BaseMatrix&lt;S&gt;&amp;, rightHandSide: const BaseMatrix&lt;S&gt;&amp;): RectangularMatrix&lt;S&gt;</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1021" y="958.5">«friend»+operator+(leftHandSide: const BaseMatrix&lt;S&gt;&amp;, rightHandSide: const BaseMatrix&lt;S&gt;&amp;): RectangularMatrix&lt;S&gt;</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1021" y="973.5">«friend»+operator-(leftHandSide: const BaseMatrix&lt;S&gt;&amp;, rightHandSide: const BaseMatrix&lt;S&gt;&amp;): RectangularMatrix&lt;S&gt;</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1021" y="988.5">«friend»+operator*(leftHandSide: const S&amp;, rightHandSide: const Matrix&lt;S&gt;&amp;): RectangularMatrix&lt;S&gt;</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1021" y="1003.5">«friend»+operator*(leftHandSide: const Matrix&lt;S&gt;&amp;, rightHandSide: const Vector&lt;S&gt;&amp;): Vector&lt;S&gt;</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1021" y="1018.5">«friend»+operator-(leftHandSide: const BaseMatrix&lt;S&gt;&amp;): RectangularMatrix&lt;S&gt;</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1021" y="1033.5">«friend»+transpose(leftHandSide: const BaseMatrix&lt;S&gt;&amp;): RectangularMatrix&lt;S&gt;</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1021" y="1048.5">«friend»+isDiagonallyDominant(leftHandSide: BaseMatrix&lt;S&gt;&amp;): bool</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1021" y="1063.5">«virtual»+zero(): zero</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1021" y="1078.5">«friend»+operator&lt;&lt;(os: std::ostream&amp;, other: const Matrix&lt;T&gt;&amp;): std::ostream&amp; </text></g></g><g transform="translate(5,-6) scale(1,1)"><rect fill="#ffffff" stroke="none" x="1885" y="800" width="73" height="37"/></g><g transform="translate(5,-6) scale(1,1)"><path fill="none" stroke="#000000" d="M 1885 800 L 1958 800 L 1958 837 L 1885 837 L 1885 800 Z Z" stroke-miterlimit="10" stroke-dasharray="3"/></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1890" y="817.5">T</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1890" y="832.5">Friend_S</text></g></g><g transform="translate(5,-6) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="2447" y="1296" width="1189" height="415" opacity="0.2"/></g><g transform="translate(5,-6) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="3572" y="1263" width="73" height="37" opacity="0.2"/></g><g transform="translate(5,-6) scale(1,1)"><rect fill="#ffffff" stroke="none" x="2440" y="1289" width="1189" height="415"/></g><g transform="translate(5,-6) scale(1,1)"><path fill="none" stroke="#000000" d="M 2440 1289 L 3629 1289 L 3629 1704 L 2440 1704 L 2440 1289 Z Z" stroke-miterlimit="10"/></g><g transform="translate(5,-6) scale(1,1)"><path fill="none" stroke="#000000" d="M 2440 1329 L 3629 1329" stroke-miterlimit="10"/></g><g transform="translate(5,-6) scale(1,1)"><path fill="none" stroke="#000000" d="M 2440 1382 L 3629 1382" stroke-miterlimit="10"/></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="2978.5" y="1308.5">DiagonalMatrix</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2950.5" y="1323.5">(from Eigen (Matrix))</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2445" y="1346.5">#_rows</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2445" y="1361.5">#_columns</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2445" y="1376.5">#data: Vector&lt;T&gt;</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2445" y="1399.5">«constructor»+DiagonalMatrix()</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2445" y="1414.5">«constructor»+DiagonalMatrix(rows: rows, columns: columns)</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2445" y="1429.5">«constructor»+DiagonalMatrix(other: const DiagonalMatrix&lt;T&gt;&amp;&amp;)</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2445" y="1444.5">«constructor»+DiagonalMatrix(other: const DiagonalMatrix&lt;T&gt;&amp;)</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2445" y="1459.5">«constructor»+DiagonalMatrix(list: std::initializer_list&lt;std::initializer_list&lt;T&gt;&gt;)</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2445" y="1474.5">«virtual»+operator=(other: const DiagonalMatrix&lt;T&gt;&amp;): DiagonalMatrix&lt;T&gt;&amp;</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2445" y="1489.5">«virtual»+operator=(other: DiagonalMatrix&lt;T&gt;&amp;&amp;): DiagonalMatrix&lt;T&gt;&amp;</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2445" y="1504.5">+operator*=(rightHandSide: const DiagonalMatrix&lt;S&gt;&amp;): DiagonalMatrix&lt;S&gt;</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2445" y="1519.5">+operator+=(rightHandSide: const DiagonalMatrix&lt;S&gt;&amp;): DiagonalMatrix&lt;S&gt;</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2445" y="1534.5">+operator-=(rightHandSide: const DiagonalMatrix&lt;S&gt;&amp;): DiagonalMatrix&lt;S&gt;</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2445" y="1549.5">«friend»+operator*(leftHandSide: const DiagonalMatrix&lt;S&gt;&amp; leftHandSide, rightHandSide: const DiagonalMatrix&lt;S&gt;&amp; leftHandSide): DiagonalMatrix&lt;S&gt; </text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2445" y="1564.5">«friend»+operator+(leftHandSide: const DiagonalMatrix&lt;S&gt;&amp; leftHandSide, rightHandSide: const DiagonalMatrix&lt;S&gt;&amp; leftHandSide): DiagonalMatrix&lt;S&gt; </text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2445" y="1579.5">«friend»+operator-(leftHandSide: const DiagonalMatrix&lt;S&gt;&amp; leftHandSide, rightHandSide: const DiagonalMatrix&lt;S&gt;&amp; leftHandSide): DiagonalMatrix&lt;S&gt; </text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2445" y="1594.5">«friend»+operator*(leftHandSide: const S&amp;, rightHandSide: const DiagonalMatrix&lt;S&gt;&amp;): DiagonalMatrix&lt;S&gt; </text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2445" y="1609.5">«friend»+operator-(leftHandSide: const DiagonalMatrix&lt;S&gt;&amp;):  DiagonalMatrix&lt;S&gt;</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2445" y="1624.5">«friend»+transpose(leftHandSide: const DiagonalMatrix&lt;S&gt;&amp;): DiagonalMatrix&lt;S&gt;</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2445" y="1639.5">«virtual»+resize(rows: rows, columns: columns)</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2445" y="1654.5">«virtual»+operator()(row: const int, column: const int): T&amp;</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2445" y="1669.5">«virtual»+operator()(row: const int, column: const int): const T&amp;</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2445" y="1684.5">«virtual»+rows(): size_t</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2445" y="1699.5">«virtual»+columns(): size_t</text></g></g><g transform="translate(5,-6) scale(1,1)"><rect fill="#ffffff" stroke="none" x="3565" y="1256" width="73" height="37"/></g><g transform="translate(5,-6) scale(1,1)"><path fill="none" stroke="#000000" d="M 3565 1256 L 3638 1256 L 3638 1293 L 3565 1293 L 3565 1256 Z Z" stroke-miterlimit="10" stroke-dasharray="3"/></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3570" y="1273.5">T</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="3570" y="1288.5">S_Friend</text></g></g><g transform="translate(5,-6) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="1207" y="1296" width="1213" height="415" opacity="0.2"/></g><g transform="translate(5,-6) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="2356" y="1263" width="73" height="37" opacity="0.2"/></g><g transform="translate(5,-6) scale(1,1)"><rect fill="#ffffff" stroke="none" x="1200" y="1289" width="1213" height="415"/></g><g transform="translate(5,-6) scale(1,1)"><path fill="none" stroke="#000000" d="M 1200 1289 L 2413 1289 L 2413 1704 L 1200 1704 L 1200 1289 Z Z" stroke-miterlimit="10"/></g><g transform="translate(5,-6) scale(1,1)"><path fill="none" stroke="#000000" d="M 1200 1329 L 2413 1329" stroke-miterlimit="10"/></g><g transform="translate(5,-6) scale(1,1)"><path fill="none" stroke="#000000" d="M 1200 1367 L 2413 1367" stroke-miterlimit="10"/></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="1746.5" y="1308.5">SymmetricMatrix</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1722.5" y="1323.5">(from Eigen (Matrix))</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1205" y="1346.5">#dimension</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1205" y="1361.5">#data: std::unique_ptr&lt;Vector&lt;T&gt;[]&gt; data;</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1205" y="1384.5">«constructor»+SymmetricMatrix()</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1205" y="1399.5">«constructor»+SymmetricMatrix(rows: rows, columns: columns)</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1205" y="1414.5">«constructor»+SymmetricMatrix(other: const DiagonalMatrix&lt;T&gt;&amp;&amp;)</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1205" y="1429.5">«constructor»+SymmetricMatrix(other: const DiagonalMatrix&lt;T&gt;&amp;)</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1205" y="1444.5">«constructor»+SymmetricMatrix(list: std::initializer_list&lt;std::initializer_list&lt;T&gt;&gt;)</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1205" y="1459.5">«virtual»+operator=(other: const SymmetricMatrix&lt;T&gt;&amp;): SymmetricMatrix&lt;T&gt;&amp;</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1205" y="1474.5">«virtual»+operator=(other: SymmetricMatrix&lt;T&gt;&amp;&amp;): SymmetricMatrix&lt;T&gt;&amp;</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1205" y="1489.5">+operator+=(rightHandSide: const SymmetricMatrix&lt;S&gt;&amp;): SymmetricMatrix&lt;S&gt;</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1205" y="1504.5">+operator-=(rightHandSide: const SymmetricMatrix&lt;S&gt;&amp;): SymmetricMatrix&lt;S&gt;</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1205" y="1519.5">«friend»+operator+(leftHandSide: const SymmetricMatrix&lt;S&gt;&amp; leftHandSide, rightHandSide: const SymmetricMatrix&lt;S&gt;&amp; leftHandSide): SymmetricMatrix&lt;S&gt;</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1205" y="1534.5">«friend»+operator-(leftHandSide: const SymmetricMatrix&lt;S&gt;&amp; leftHandSide, rightHandSide: const SymmetricMatrix&lt;S&gt;&amp; leftHandSide): SymmetricMatrix&lt;S&gt; </text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1205" y="1549.5">«friend»+operator*(leftHandSide: const S&amp;, rightHandSide: const SymmetricMatrix&lt;S&gt;&amp;): SymmetricMatrix&lt;S&gt; </text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1205" y="1564.5">«friend»+operator-(leftHandSide: const SymmetricMatrix&lt;S&gt;&amp;):  SymmetricMatrix&lt;S&gt;</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1205" y="1579.5">«friend»+transpose(leftHandSide: const SymmetricMatrix&lt;S&gt;&amp;): SymmetricMatrix&lt;S&gt;</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1205" y="1594.5">«virtual»+resize(rows: rows, columns: columns)</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1205" y="1609.5">«virtual»+operator()(row: const int, column: const int): T&amp;</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1205" y="1624.5">«virtual»+operator()(row: const int, column: const int): const T&amp;</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1205" y="1639.5">«virtual»+rows(): size_t</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1205" y="1654.5">«virtual»+columns(): size_t</text></g></g><g transform="translate(5,-6) scale(1,1)"><rect fill="#ffffff" stroke="none" x="2349" y="1256" width="73" height="37"/></g><g transform="translate(5,-6) scale(1,1)"><path fill="none" stroke="#000000" d="M 2349 1256 L 2422 1256 L 2422 1293 L 2349 1293 L 2349 1256 Z Z" stroke-miterlimit="10" stroke-dasharray="3"/></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2354" y="1273.5">T</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2354" y="1288.5">S_Friend</text></g></g><g transform="translate(5,-6) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="39" y="1272" width="1141" height="445" opacity="0.2"/></g><g transform="translate(5,-6) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="1116" y="1239" width="73" height="37" opacity="0.2"/></g><g transform="translate(5,-6) scale(1,1)"><rect fill="#ffffff" stroke="none" x="32" y="1265" width="1141" height="445"/></g><g transform="translate(5,-6) scale(1,1)"><path fill="none" stroke="#000000" d="M 32 1265 L 1173 1265 L 1173 1710 L 32 1710 L 32 1265 Z Z" stroke-miterlimit="10"/></g><g transform="translate(5,-6) scale(1,1)"><path fill="none" stroke="#000000" d="M 32 1305 L 1173 1305" stroke-miterlimit="10"/></g><g transform="translate(5,-6) scale(1,1)"><path fill="none" stroke="#000000" d="M 32 1388 L 1173 1388" stroke-miterlimit="10"/></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="554.5" y="1284.5">BandedMatrix</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="518.5" y="1299.5">(from Eigen (Matrix))</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="37" y="1322.5">#_rows</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="37" y="1337.5">#_columns</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="37" y="1352.5">#upperBand: Vector&lt;T&gt;</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="37" y="1367.5">#middleBand: Vector&lt;T&gt;</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="37" y="1382.5">#lowerBand: Vector&lt;T&gt;</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="37" y="1405.5">«constructor»+BandedMatrix()</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="37" y="1420.5">«constructor»+BandedMatrix(rows: rows, columns: columns)</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="37" y="1435.5">«constructor»+BandedMatrix(other: const BandedMatrix&lt;T&gt;&amp;&amp;)</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="37" y="1450.5">«constructor»+BandedMatrix(other: const BandedMatrix&lt;T&gt;&amp;)</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="37" y="1465.5">«constructor»+BandedMatrix(list: std::initializer_list&lt;std::initializer_list&lt;T&gt;&gt;)</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="37" y="1480.5">«virtual»+operator=(other: const BandedMatrix&lt;T&gt;&amp;): BandedMatrix&lt;T&gt;&amp;</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="37" y="1495.5">«virtual»+operator=(other: BandedMatrix&lt;T&gt;&amp;&amp;): BandedMatrix&lt;T&gt;&amp;</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="37" y="1510.5">+operator+=(rightHandSide: const BandedMatrix&lt;S&gt;&amp;): BandedMatrix&lt;S&gt;</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="37" y="1525.5">+operator-=(rightHandSide: const BandedMatrix&lt;S&gt;&amp;): BandedMatrix&lt;S&gt;</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="37" y="1540.5">«friend»+operator+(leftHandSide: const BandedMatrix&lt;S&gt;&amp; leftHandSide, rightHandSide: const BandedMatrix&lt;S&gt;&amp; leftHandSide): BandedMatrix&lt;S&gt; </text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="37" y="1555.5">«friend»+operator-(leftHandSide: const BandedMatrix&lt;S&gt;&amp; leftHandSide, rightHandSide: const BandedMatrix&lt;S&gt;&amp; leftHandSide): BandedMatrix&lt;S&gt; </text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="37" y="1570.5">«friend»+operator-(leftHandSide: const BandedMatrix&lt;S&gt;&amp;):  BandedMatrix&lt;S&gt;</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="37" y="1585.5">«friend»+transpose(leftHandSide: const BandedMatrix&lt;S&gt;&amp;): BandedMatrix&lt;S&gt;</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="37" y="1600.5">«virtual»+resize(rows: rows, columns: columns)</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="37" y="1615.5">«virtual»+operator()(row: const int, column: const int): T&amp;</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="37" y="1630.5">«virtual»+operator()(row: const int, column: const int): const T&amp;</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="37" y="1645.5">«virtual»+rows(): size_t</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="37" y="1660.5">«virtual»+columns(): size_t</text></g></g><g transform="translate(5,-6) scale(1,1)"><rect fill="#ffffff" stroke="none" x="1109" y="1232" width="73" height="37"/></g><g transform="translate(5,-6) scale(1,1)"><path fill="none" stroke="#000000" d="M 1109 1232 L 1182 1232 L 1182 1269 L 1109 1269 L 1109 1232 Z Z" stroke-miterlimit="10" stroke-dasharray="3"/></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1114" y="1249.5">T</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1114" y="1264.5">S_Friend</text></g></g><g transform="translate(5,-6) scale(1,1)"><path fill="none" stroke="#000000" d="M 1960 897 L 2167 878" stroke-miterlimit="10"/></g><g transform="translate(5,-6) scale(1,1)"><path fill="#FFFFFF" stroke="none" d="M 2147.5292598205247 888.2415954256825 L 2167 878 L 2145.9902060087024 871.4740091600407"/></g><g transform="translate(5,-6) scale(1,1)"><path fill="none" stroke="#000000" d="M 2147.5292598205247 888.2415954256825 L 2167 878 L 2145.9902060087024 871.4740091600407 L 2147.5292598205247 888.2415954256825" stroke-miterlimit="10"/></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="2028.5" y="878.5">+virtual</text></g></g><g transform="translate(5,-6) scale(1,1)"><path fill="none" stroke="#000000" d="M 1510 756 L 1505 799" stroke-miterlimit="10"/></g><g transform="translate(5,-6) scale(1,1)"><path fill="#FFFFFF" stroke="none" d="M 1498.9849052256895 777.8382742939981 L 1505 799 L 1515.710285443929 779.7830859472817"/></g><g transform="translate(5,-6) scale(1,1)"><path fill="none" stroke="#000000" d="M 1498.9849052256895 777.8382742939981 L 1505 799 L 1515.710285443929 779.7830859472817 L 1498.9849052256895 777.8382742939981" stroke-miterlimit="10"/></g><g transform="translate(5,-6) scale(1,1)"><path fill="none" stroke="#000000" d="M 1539 799 L 1552 763 L 1552 756" stroke-miterlimit="10" stroke-dasharray="3"/></g><g transform="translate(5,-6) scale(1,1)"><path fill="none" stroke="#000000" d="M 1556.2095177560159 766.1626748576241 L 1552 756 L 1547.7904822439841 766.1626748576241" stroke-miterlimit="10"/></g><g transform="translate(5,-6) scale(1,1)"><path fill="none" stroke="#000000" d="M 2439 1272 L 1899 1084" stroke-miterlimit="10"/></g><g transform="translate(5,-6) scale(1,1)"><path fill="#FFFFFF" stroke="none" d="M 1920.9634197171545 1082.7318539799717 L 1899 1084 L 1915.4271976703428 1098.6337683697495"/></g><g transform="translate(5,-6) scale(1,1)"><path fill="none" stroke="#000000" d="M 1920.9634197171545 1082.7318539799717 L 1899 1084 L 1915.4271976703428 1098.6337683697495 L 1920.9634197171545 1082.7318539799717" stroke-miterlimit="10"/></g><g transform="translate(5,-6) scale(1,1)"><path fill="none" stroke="#000000" d="M 1676 1255 L 1573 1084" stroke-miterlimit="10"/></g><g transform="translate(5,-6) scale(1,1)"><path fill="#FFFFFF" stroke="none" d="M 1590.6990473499995 1097.0668941567028 L 1573 1084 L 1576.275426934475 1105.7548058689779"/></g><g transform="translate(5,-6) scale(1,1)"><path fill="none" stroke="#000000" d="M 1590.6990473499995 1097.0668941567028 L 1573 1084 L 1576.275426934475 1105.7548058689779 L 1590.6990473499995 1097.0668941567028" stroke-miterlimit="10"/></g><g transform="translate(5,-6) scale(1,1)"><path fill="none" stroke="#000000" d="M 1005 1231 L 1250 1084" stroke-miterlimit="10"/></g><g transform="translate(5,-6) scale(1,1)"><path fill="#FFFFFF" stroke="none" d="M 1236.902714442275 1101.6765695489655 L 1250 1084 L 1228.239598370807 1087.2380427631851"/></g><g transform="translate(5,-6) scale(1,1)"><path fill="none" stroke="#000000" d="M 1236.902714442275 1101.6765695489655 L 1250 1084 L 1228.239598370807 1087.2380427631851 L 1236.902714442275 1101.6765695489655" stroke-miterlimit="10"/></g><g transform="translate(5,-6) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="311" y="1143" width="217" height="72" opacity="0.2"/></g><g transform="translate(5,-6) scale(1,1)"><rect fill="#ffffff" stroke="none" x="304" y="1136" width="217" height="72"/></g><g transform="translate(5,-6) scale(1,1)"><path fill="none" stroke="#000000" d="M 304 1136 L 521 1136 L 521 1208 L 304 1208 L 304 1136 Z Z" stroke-miterlimit="10"/></g><g transform="translate(5,-6) scale(1,1)"><path fill="none" stroke="#000000" d="M 304 1176 L 521 1176" stroke-miterlimit="10"/></g><g transform="translate(5,-6) scale(1,1)"><path fill="none" stroke="#000000" d="M 304 1186 L 521 1186" stroke-miterlimit="10"/></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="308.5" y="1155.5">BandedMatrixDimensionError</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="344.5" y="1170.5">(from Exceptions)</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="309" y="1203.5">+what(): const std::string</text></g></g><g transform="translate(5,-6) scale(1,1)"><path fill="none" stroke="#000000" d="M 450 1231 L 436 1209" stroke-miterlimit="10" stroke-dasharray="3"/></g><g transform="translate(5,-6) scale(1,1)"><path fill="none" stroke="#000000" d="M 445.0074990788612 1215.3138704725638 L 436 1209 L 437.90468305351084 1219.8338443068778" stroke-miterlimit="10"/></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="401.5" y="1234.5">+throws</text></g></g><g transform="translate(5,-6) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="551" y="1143" width="217" height="72" opacity="0.2"/></g><g transform="translate(5,-6) scale(1,1)"><rect fill="#ffffff" stroke="none" x="544" y="1136" width="217" height="72"/></g><g transform="translate(5,-6) scale(1,1)"><path fill="none" stroke="#000000" d="M 544 1136 L 761 1136 L 761 1208 L 544 1208 L 544 1136 Z Z" stroke-miterlimit="10"/></g><g transform="translate(5,-6) scale(1,1)"><path fill="none" stroke="#000000" d="M 544 1176 L 761 1176" stroke-miterlimit="10"/></g><g transform="translate(5,-6) scale(1,1)"><path fill="none" stroke="#000000" d="M 544 1186 L 761 1186" stroke-miterlimit="10"/></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="560.5" y="1155.5">NonSymmetricMatrixError</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="584.5" y="1170.5">(from Exceptions)</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="549" y="1203.5">+what(): const std::string</text></g></g><g transform="translate(5,-6) scale(1,1)"><path fill="none" stroke="#000000" d="M 1199 1289 L 992 1224 L 762 1189" stroke-miterlimit="10" stroke-dasharray="3"/></g><g transform="translate(5,-6) scale(1,1)"><path fill="none" stroke="#000000" d="M 772.68030005957 1186.367284550592 L 762 1189 L 771.4137235444399 1194.6905016500182" stroke-miterlimit="10"/></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="960.5" y="1244.5">+throws</text></g></g><g transform="translate(5,-6) scale(1,1)"><rect fill="#C0C0C0" stroke="none" x="783" y="1143" width="217" height="72" opacity="0.2"/></g><g transform="translate(5,-6) scale(1,1)"><rect fill="#ffffff" stroke="none" x="776" y="1136" width="217" height="72"/></g><g transform="translate(5,-6) scale(1,1)"><path fill="none" stroke="#000000" d="M 776 1136 L 993 1136 L 993 1208 L 776 1208 L 776 1136 Z Z" stroke-miterlimit="10"/></g><g transform="translate(5,-6) scale(1,1)"><path fill="none" stroke="#000000" d="M 776 1176 L 993 1176" stroke-miterlimit="10"/></g><g transform="translate(5,-6) scale(1,1)"><path fill="none" stroke="#000000" d="M 776 1186 L 993 1186" stroke-miterlimit="10"/></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="bold" text-decoration="none" x="804.5" y="1155.5">NonSquareMatrixError</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="816.5" y="1170.5">(from Exceptions)</text></g></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="781" y="1203.5">+what(): const std::string</text></g></g><g transform="translate(5,-6) scale(1,1)"><path fill="none" stroke="#000000" d="M 1209 1255 L 1040 1192 L 994 1186" stroke-miterlimit="10" stroke-dasharray="3"/></g><g transform="translate(5,-6) scale(1,1)"><path fill="none" stroke="#000000" d="M 1004.6217681594538 1183.14027253627 L 994 1186 L 1003.5328569756902 1191.4885916117923" stroke-miterlimit="10"/></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1009.5" y="1212.5">+throws</text></g></g><g transform="translate(5,-6) scale(1,1)"><path fill="none" stroke="#000000" d="M 298 1231 L 176 1136 L 391 1085" stroke-miterlimit="10" stroke-dasharray="3"/></g><g transform="translate(5,-6) scale(1,1)"><path fill="none" stroke="#000000" d="M 382.0832926911359 1091.4414540880184 L 391 1085 L 380.1401399297069 1083.2497316623862" stroke-miterlimit="10"/></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="100.5" y="1182.5">+throws</text></g></g><g transform="translate(5,-6) scale(1,1)"><path fill="none" stroke="#000000" d="M 210 1231 L 40 1128 L 568 897" stroke-miterlimit="10" stroke-dasharray="3"/></g><g transform="translate(5,-6) scale(1,1)"><path fill="none" stroke="#000000" d="M 560.3766448857132 904.9299720555293 L 568 897 L 557.00213688821 897.2168109183792" stroke-miterlimit="10"/></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="4.5" y="1120.5">+throws</text></g></g><g transform="translate(5,-6) scale(1,1)"><path fill="none" stroke="#000000" d="M 2439 1366 L 898 1073" stroke-miterlimit="10" stroke-dasharray="3"/></g><g transform="translate(5,-6) scale(1,1)"><path fill="none" stroke="#000000" d="M 908.7701059086063 1070.762854784015 L 898 1073 L 907.1975154747948 1079.0337143693507" stroke-miterlimit="10"/></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1636.5" y="1239.5">+throws</text></g></g><g transform="translate(5,-6) scale(1,1)"><path fill="none" stroke="#000000" d="M 1282 1255 L 1040 1152 L 898 1106" stroke-miterlimit="10" stroke-dasharray="3"/></g><g transform="translate(5,-6) scale(1,1)"><path fill="none" stroke="#000000" d="M 908.9653242492684 1105.1272663015518 L 898 1106 L 906.3707710509098 1113.1365392182242" stroke-miterlimit="10"/></g><g transform="translate(5,-6) scale(1,1)"><g><path fill="none" stroke="none"/><text fill="#000000" stroke="none" font-family="Source Code Pro" font-size="13px" font-style="normal" font-weight="normal" text-decoration="none" x="1006.5" y="1172.5">+throws</text></g></g></g></svg>